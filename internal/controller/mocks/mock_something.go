// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eiizu/go-service/internal/controller (interfaces: SomethingUseCase)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSomethingUseCase is a mock of SomethingUseCase interface.
type MockSomethingUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockSomethingUseCaseMockRecorder
}

// MockSomethingUseCaseMockRecorder is the mock recorder for MockSomethingUseCase.
type MockSomethingUseCaseMockRecorder struct {
	mock *MockSomethingUseCase
}

// NewMockSomethingUseCase creates a new mock instance.
func NewMockSomethingUseCase(ctrl *gomock.Controller) *MockSomethingUseCase {
	mock := &MockSomethingUseCase{ctrl: ctrl}
	mock.recorder = &MockSomethingUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSomethingUseCase) EXPECT() *MockSomethingUseCaseMockRecorder {
	return m.recorder
}

// DoSomething mocks base method.
func (m *MockSomethingUseCase) DoSomething(arg0 string) (map[string]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoSomething", arg0)
	ret0, _ := ret[0].(map[string]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoSomething indicates an expected call of DoSomething.
func (mr *MockSomethingUseCaseMockRecorder) DoSomething(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoSomething", reflect.TypeOf((*MockSomethingUseCase)(nil).DoSomething), arg0)
}
